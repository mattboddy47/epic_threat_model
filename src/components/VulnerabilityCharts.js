import { React, useEffect, useState } from 'react'
import Grid from '@mui/material/Grid';
import Typography from '@mui/material/Typography';
import { VictoryBar, VictoryAxis, VictoryPolarAxis, VictoryChart, VictoryTheme } from 'victory';
import Link from '@mui/material/Link';
import { getStorage, ref, getDownloadURL } from "firebase/storage";
import axios from 'axios';
import { useNavigate } from 'react-router-dom';
import { out_of_cloud_hosting_credit } from '../Text/ErrorTexts';

export default function VulnerabilityCharts(props) {
    const asset = props.asset;
    const navigate = useNavigate();

    const [cveInfo, setCveInfo] = useState()
    const storage = getStorage();
    const cveJsonPath = ref(storage, 'CVEs/' + asset.CVE_filename);


    useEffect(() => {
        if (asset.has_CVEs){
            const getCveInfo = async () => {
                    getDownloadURL(cveJsonPath)
                    .then((url) => {
                        axios.get(url)
                            .then(response => {
                                setCveInfo(response.data)
                            })
                    }).catch(error => {
                        console.log(error)
                        switch (error.code) {
                            case 'storage/quota-exceeded':
                                navigate('/error', { state: { speech: out_of_cloud_hosting_credit } })
                                break;
                            default:
                                // navigate('/error')
                                break;

                        }

                    }
                    );

        }
            getCveInfo();
    }
    }, [])
    if (asset.has_CVEs && cveInfo) {
        console.log(cveInfo)
        return (
            <>

                <Typography sx={{ lineHeight: 3 }} textAlign={'center'} gutterBottom component="div">
                    The following information is based on the last 119 days of known reported vulnerabilities on this platform.
                </Typography>
                <Typography sx={{ lineHeight: 3 }} textAlign={'center'} gutterBottom component="div">
                    Data obtained from the <Link href="https://nvd.nist.gov/">National Vulnerability Database</Link>.
                </Typography>
                <Grid container
                    direction="row"
                    spacing={2}
                    justifyContent="center"
                    marginBottom={4}
                    alignItems="center">
                    <Grid item>
                    <Typography sx={{ lineHeight: 3 }} textAlign={'center'} gutterBottom component="div">
                        Impact to Data
                </Typography>
                        <VictoryChart 
                            width={300}
                            animate={{
                                duration: 2000,
                                onLoad: { duration: 1000 }
                            }}
                            theme={VictoryTheme.material}
                        >
                            <VictoryAxis
                                style={{
                                    tickLabels: { fill: "#e8e8e8" },
                                }}
                            />
                            <VictoryBar
                                data={[
                                    { x: "Confidentiality", y: cveInfo.high_confidentiality_impact_count },
                                    { x: "Integrity", y: cveInfo.high_integrity_impact_count },
                                    { x: "Availability", y: cveInfo.high_availability_impact_count }]}
                                style={{
                                    data: {
                                        fill: "#2D6E7E",
                                        stroke: "black",
                                        strokeWidth: 2
                                    }
                                }}
                            />
                        </VictoryChart>
                    </Grid>
                    <Grid item>
                    <Typography sx={{ lineHeight: 3 }} textAlign={'center'} gutterBottom component="div">
                        Privileges Required of the Hacker
                </Typography>
                    <VictoryChart polar
                            width={450}
                            animate={{
                                duration: 2000,
                                onLoad: { duration: 1000 }
                            }}
                            theme={VictoryTheme.material}
                        >
                            <VictoryPolarAxis
                                style={{
                                    tickLabels: { fill: "#e8e8e8" },
                                }}
                            />
                            <VictoryBar
                                data={[
                                    { x: "None", y: cveInfo.no_privileges_required_count },
                                    { x: "Low", y: cveInfo.low_privileges_required_count },
                                    { x: "High", y: cveInfo.high_privileges_required_count }]}
                                style={{
                                    data: {
                                        fill: "#2D6E7E",
                                        stroke: "black",
                                        strokeWidth: 2
                                    }
                                }}
                            />
                        </VictoryChart>

                    </Grid>

                    <Grid item>
                    <Typography sx={{ lineHeight: 3 }} textAlign={'center'} gutterBottom component="div">
                        Where the hacker could come from
                </Typography>
                    <VictoryChart polar
                            width={500}
                            animate={{
                                duration: 2000,
                                onLoad: { duration: 1000 }
                            }}
                            theme={VictoryTheme.material}
                        >
                            <VictoryPolarAxis
                                style={{
                                    tickLabels: { fill: "#e8e8e8" },
                                }}
                            />
                            <VictoryBar
                                data={[
                                    { x: "Adjacent Network", y: cveInfo.adjacent_network_attack_vector_count },
                                    { x: "Network", y: cveInfo.network_attack_vector_count },
                                    { x: "Physical", y: cveInfo.physical_attack_vector_count },
                                    { x: "Local", y: cveInfo.local_attack_vector_count }]}
                                style={{
                                    data: {
                                        fill: "#2D6E7E",
                                        stroke: "black",
                                        strokeWidth: 2
                                    }
                                }}
                            />
                        </VictoryChart>

                    </Grid>

                </Grid>
            </>
        )
    }
    return (
        <>
        </>
    )
}